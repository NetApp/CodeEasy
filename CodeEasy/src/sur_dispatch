#!/usr/bin/perl -w
################################################################################
# CodeEasy Customer Evaluation Script
#          This script was developed by NetApp to help demonstrate NetApp 
#          technologies.  This script is not officially supported as a 
#          standard NetApp product.
#         
# Purpose: 
#          This program performs runs a command line as a new user, such
#          as a devops or build user who has permissions to do things
#          like create snapshot, create flexclones, etc.
#
#          [SEE BELOW FOR 'setuid' manpage]      
# 
#
# Usage:   %> sur_dispatch <command line to execute>
#
# Author:  Michael Johnson (michael.johnson@netapp.com)
#           
# Copyright 2015 NetApp
#
################################################################################

use warnings;
use strict;

use FindBin;
use lib "$FindBin::Bin/.";




    die("USAGE: $0 <parent_cmd> <sur_cmd> <subparams> <log>\n") if @ARGV < 4;

    my ($parent_cmd, $sur_cmd, $log_file) = @ARGV[0, 1, -1];

    printf "%-7s: %s\n", "CALL", "sur_dispatch";
    printf "%-7s: %-9s=> %s\n", "", "param", $_ foreach @ARGV;

    my $ret = 1;
    if ($sur_cmd eq "sur_vol_exists") {
        $ret = CeZapiFiler::vol_exists(@ARGV[2..4]);
    } elsif ($sur_cmd eq "sur_mount_volume") {
        $ret = CeZapiFiler::mount_volume(@ARGV[2..5]);
    } elsif ($sur_cmd eq "sur_modify_volume_attrs") {
        $ret = CeZapiFiler::modify_volume_attrs(@ARGV[2..6]);
    } elsif ($sur_cmd eq "sur_clone_volume") {
        $ret = CeZapiFiler::clone_volume(@ARGV[2..6]);
    } elsif ($sur_cmd eq "sur_create_snapshot") {
        $ret = CeZapiFiler::create_snapshot(@ARGV[2..5]);
    } elsif ($sur_cmd eq "sur_set_user_clone_attrs") {
        $ret = CeZapiFiler::set_user_clone_attrs(@ARGV[2..5]);
    } elsif ($sur_cmd eq "sur_make_path") {
        $ret = CeUtil::make_path($ARGV[2]);
    } elsif ($sur_cmd eq "sur_delete_volume") {
        $ret = CeZapiFiler::delete_volume(@ARGV[2..4]);
    } else {
            CeUtil::log_only("$file_list exists, chown based on its content ...\n");
            $ret = do_filelist_chown($chown_dir, $to_user, $uid, $file_list);
        }
    }
    exit 0;


